!% -SD
!% +language_name=Spanish
!% $MAX_LABELS=2000
!% $MAX_ZCODE_SIZE=45000
!% $list


!!==============================================================================
!!
!!	PROYECTO 1973
!!
!!==============================================================================
!!
!!	File:			1973.inf
!!	Author(s):		J. Francisco Martín (jfm.lisaso@gmail.com)
!!	Languague:		ES (Castellano)
!!	System:			Inform, INFSP 6
!!	Platform:		Z-Machine / GLULX
!!	Version:		0.0
!!	Released:		0000/00/00
!!
!!------------------------------------------------------------------------------
!!
!!	Copyright (c) 2013, J. Francisco Martín
!!
!!	This file is part of PROYECTO 1973.
!!
!!	PROYECTO 1973 is free software: you can redistribute it and/or modify 
!!	it under the terms of the GNU General Public License as published by 
!!	the Free Software Foundation, either version 3 of the License, or 
!!	(at your option) any later version.
!!
!!	PROYECTO 1973 is distributed in the hope that it will be useful, 
!!	but WITHOUT ANY WARRANTY; without even the implied warranty of 
!!	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!!	GNU General Public License for more details.
!!
!!	You should have received a copy of the GNU General Public License 
!!	along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
!!
!!------------------------------------------------------------------------------


!!==============================================================================
!!	Constantes y variables globales del relato
!!------------------------------------------------------------------------------

Constant Story "PROYECTO 1973";

Constant ALPHA_RELEASE;
Constant TEST_SCENE1;
Constant Checking 1;
!Release 0; Serial "130718";
Release 1;

Constant MANUAL_PRONOUNS;		! Los pronoms. refieren a objetos ya mencionados
Constant NO_PLACES;				! Acciones LUGARES Y OBJETOS desactivadas
Constant NO_SCORE;				! No se lleva conteo de puntuación
Constant SIN_MENSAJES;			! Se omiten los mensajes por defecto de la lib.
Constant MAX_CARRIED = 3;		! Máx. de objetos que se pueden llevar en mano
Constant SACK_OBJECT = ropa;	! Contenedor principal para la librería

Constant PARSER_STYLE _IST_;	! Selecciona estilo de los mensajes del parser
Constant PARSER_PREFIX "[";		! Define texto inicial de mensajes del parser
Constant PARSER_SUFIX "]";		! Define texto final de mensajes del parser

Global flowers;					! Tipo de flor destacado en el relato (NOTA #1)
Global say_switch = true;		! Interruptor de la función say()
Global next_track;				! Siguiente pista de audio a reproducir


!!==============================================================================
!!	Reemplazos de rutinas utilizadas por la librería Inform
!!------------------------------------------------------------------------------

Replace AttemptToTakeObject;	! Intento de transferir un objeto al jugador
Replace Banner;					! Créditos generales de la aplicación
Replace DrawStatusLine;			! Dibuja la barra de estado
Replace GetGNAOfObject;			! Rutina para obtener el GNA de un objeto
!Replace Box__Routine;			! Comando box para escribir texto enmarcado
Replace InvSub;					! Rutinas para tomar INVENTARIO del personaje
Replace InvTallSub;				! Rutinas para tomar INVENTARIO del personaje
Replace InvWideSub;				! Rutinas para tomar INVENTARIO del personaje
Replace LMode1Sub;				! Lookmode 1: Breve
Replace LMode2Sub;				! Lookmode 2: Largo (establecido por defecto)
Replace LMode3Sub;				! Lookmode 3: Superbreve
Replace LookSub;				! Rutina para la acción MIRAR
Replace VersionSub;				! Créditos detallados de la aplicación


!!==============================================================================
!!	Librerías y extensiones (Parte 1 de 3)
!!------------------------------------------------------------------------------

#Ifdef TARGET_GLULX;
Include "gwindefs.h";			! GWindows: Definiciones
#Endif; ! TARGET_GLULX;

Include "Parser.h";				! Decodifica la entrada del teclado
Include ">1973_lib.inf";		! Personalizaciones de la librería Inform
Include ">1973_langLM.inf";		! Mensajes de la librería

#Ifdef TARGET_GLULX;
Include "gwincls.h";			! GWindows; Window Class Framework
#Endif; ! TARGET_GLULX;


!!==============================================================================
!!	Puntos de entrada para Glk (sólo Glulx)
!!------------------------------------------------------------------------------

#Ifdef TARGET_GLULX;
!!------------------------------------------------------------------------------
!!	Rutina gancho encargada de reinicializar Damusix y recuperar los canales de 
!!	audio. (Sin esta rutina, al reiniciar la aplicación la música se solapará 
!!	con aquella que se estuviese reproduciendo durante la partida anterior).
!!------------------------------------------------------------------------------
[ GWindowsGlkIdentify phase type ref rock;
	!! Se identifican todos los Objetos de Sonido gestionados por Damusix
	Damusix.IdentificarSonidos(phase);
	phase = type + ref + rock; ! (para evitar alertas del compilador)
];

!!------------------------------------------------------------------------------
[ GWindowsGlkEvent ev context abortres;
	!! Se notifica el efecto de fade de Tiempo Real
	Damusix.NotificarFade(ev);
	!! Se gestiona el evento glk:
	switch (ev-->0) {
	0:	! evtype_None        - none
	1:	! evtype_Timer       - event repeated at fixed intervals
		AimingManager.run();
	2:	! evtype_CharInput   - keystroke input in a window
	3:	! evtype_LineInput   - full line of input in a window
	4:	! evtype_MouseInput  - mouse input in a window
	5:	! evtype_Arrange     - some windows sizes have changed
	6:	! evtype_Redraw      - graphic windows need redrawing
	7:	! evtype_SoundNotify - sound finished playing
		if (next_track ~= 0) {
			Damusix.Tocar(next_track, 1);
			next_track = 0;
		}
	8:	! evtype_Hyperlink   - selection of a hyperlink in a window
	}
	ev = context + abortres; ! (para evitar alertas del compilador)
];
#Endif; ! TARGET_GLULX;


!!==============================================================================
!!	Librerías y extensiones (Parte 2 de 2)
!!------------------------------------------------------------------------------

#Ifdef TARGET_GLULX;
Include "damusix.h";			! Administrador unificado de sonido en Glulx
Include "gwindows.h";			! GWindows: Remplazos de la librería
Include ">1973.bli";			! Recursos multimedia de la aplicación
Include ">1973_gui.inf";		! Definición de la interfaz gráfica
#Endif; ! TARGET_GLULX;

Include "aimAndFire.h";			! Sistema de apuntado y disparo QTE
Include "receptacles.h";		! Contenedores (con capacidad limitada)
Include "topicInventory.h";		! Sistema de conversación con inv. de temas
Include "types.h";				! Rutinas para modificar estilo de los textos

Include "VerbLib.h";			! Define cómo trabajan las acciones


!!==============================================================================
!!	Puntos de entrada y otras rutinas
!!------------------------------------------------------------------------------

!!------------------------------------------------------------------------------
!! Inicialización del relato.
!!------------------------------------------------------------------------------
[ Initialise;
	EraseWindow();
	flowers = GetFlowerType();
	lookmode = 2;
	location = HABITACION;

	#Ifdef DEBUG;
	VersionSub();
	new_line;
	italic_style();
	print (emph) "AVISO: ", (string) Story, " se encuentra aún en fase temprana 
	de desarrollo. Los contenidos (en especial los textos) mostrados a 
	continuación pueden no ajustarse necesariamente al resultado final.^";
	roman_style();
	new_line;
	print (parser) "Pulsa una tecla para continuar";
	PressAnyKey();
	EraseWindow();
	#Endif; ! DEBUG;

	#Ifdef TARGET_GLULX;
	if (~~Damusix.TestAudio()) {
		box	""
			"AVISO: Esta aplicación incluye contenidos gráficos y "
			"de audio, pero tu intérprete GLULX no los soporta    "
			"adecuadamente. El programa se iniciará con parte o   "
			"la totalidad de sus recursos multimedia desactivados."
			"";
		print (parser) "Pulsa una tecla para continuar";
		PressAnyKey();
		EraseWindow();
	}
	ShowGraphicWindow();
	graphicWindow.setImage(PIC_1_01);
	#Endif; ! TARGET_GLULX;

	return 2;
];

!!------------------------------------------------------------------------------
!!	Manipula la entrada del usuario antes de que sea analizada por la librería.
!!------------------------------------------------------------------------------
![ BeforeParsing; 
!	ConversationManager.try();
!];

!!------------------------------------------------------------------------------
!!	Foco del jugador.
!!------------------------------------------------------------------------------
[ InScope person item;
	!! En la oscuridad, se mueven al foco del jugador todos aquellos objetos 
	!! que hayan sido ya manipulados previamente por el personaje
	if ( person == player && location == thedark ) {
		objectloop(item in parent(player))
			if (item has moved) PlaceInScope(item);
	}
	return false;
];

!!------------------------------------------------------------------------------
!!	Deja la ventana en blanco.
!!------------------------------------------------------------------------------
[ EraseWindow;
    #Ifdef TARGET_ZCODE;
    @erase_window -1;
    #Ifnot; ! TARGET_GLULX
    if (gg_quotewin) {
		glk($0024, gg_quotewin, 0); ! close_window
		gg_quotewin = 0;
    }
    glk($002A, gg_mainwin); ! window_clear
    if (gg_statuswin) glk($002A, gg_statuswin); ! window_clear
    #Endif;
];

!!------------------------------------------------------------------------------
!!	Espera una pulsación de tecla o, si se introduce un valor, a que pase una 
!!	cantidad delay de décimas de segundo antes de continuar. Retorna verdadero 
!!	si la tecla pulsada es 'q' o 'Q', falso en caso contrario.
!!------------------------------------------------------------------------------
[ PressAnyKey delay char;
	#Ifdef TARGET_GLULX;
	if (Damusix.EnFade()) delay = 0;
	#Endif; ! TARGET_GLULX;
	if (delay > 0) char = KeyDelay(delay);
	else char = KeyCharPrimitive();
	if (char == 'q' or 'Q') return true;
	else return false;
];

!!------------------------------------------------------------------------------
!!	Imprime un mensaje text y, si el interruptor "say_switch" está activado, 
!!	espera una pulsación de tecla para continuar.
!!------------------------------------------------------------------------------
[ Say text;
	if (text ofclass String && text ~= 0) print (string) text;
	if (say_switch) say_switch = PressAnyKey();
	new_line;
];

!!------------------------------------------------------------------------------
!!	Cada vez que se inicia el relato se selecciona de manera aleatoria un tipo 
!!	de flor de entre el siguiente conjunto de valores posibles {crisantemos, 
!!	gladiolos, jazmines, madreselvas, narcisos, rosas, tulipanes, violetas}. La 
!!	variable global "flowers" (NOTA #1) guardará el tipo de flor seleccionado.
!!------------------------------------------------------------------------------
[ GetFlowerType;
	switch (random(8)) {
		1:	return crisantemos;
		2:	return gladiolos;
		3:	return jazmines;
		4:	return madreselvas;
		5:	return narcisos;
		6:	return rosas;
		7:	return tulipanes;
		8:	return violetas;
	}
];

Object	crisantemos "crisantemos"
 with	name_mp	'crisantemos', 
		gender	G_MASCULINO + G_PLURAL, 
 has	male pluralname scenery;

Object	gladiolos "gladiolos"
 with	name_mp	'gladiolos', 
		gender	G_MASCULINO + G_PLURAL, 
 has	male pluralname scenery;

Object	jazmines "jazmines"
 with	name_mp	'jazmines', 
		gender G_MASCULINO + G_PLURAL, 
 has	male pluralname scenery;

Object	madreselvas "madreselvas"
 with	name_fp	'madreselvas', 
		gender G_FEMENINO + G_PLURAL, 
 has	female pluralname scenery;

Object	narcisos "narcisos"
 with	name_mp	'narcisos', 
		gender	G_MASCULINO + G_PLURAL, 
 has	male pluralname scenery;

Object	rosas "rosas"
 with	name_fp	'rosas', 
		gender	G_FEMENINO + G_PLURAL, 
 has	female pluralname scenery;

Object	tulipanes "tulipanes"
 with	name_mp	'tulipanes', 
		gender	G_MASCULINO + G_PLURAL, 
 has	male pluralname scenery;

Object	violetas "violetas"
 with	name_fp	'violetas', 
		gender	G_FEMENINO + G_PLURAL, 
 has	female pluralname scenery;

!!------------------------------------------------------------------------------
!!	Rutinas y definiciones requeridas para lanzar la acción ##Examine sobre un 
!!	objeto tecleando únicamente su nombre. Sigue la implementación propuesta en 
!!	<http://rec.arts.int-fiction.narkive.com/Cz9j184N/inform-6-parser-question>
!!------------------------------------------------------------------------------
[ UnknownVerb;
	verb_wordnum = 0;
	return 'no.verb';
];

[ PrintVerb v;
	if (v == 'no.verb') {
		print "hacer algo con";
		return true;
	}
	return false;
];

Verb 'no.verb' * noun -> Examine;


!!==============================================================================
!!	Gramática estándar y extendida
!!------------------------------------------------------------------------------

Include	"SpanishG.h";		! Gramática española
Include	"SpanishEG.h";		! Gramática española extendida

!!------------------------------------------------------------------------------

#Ifdef TARGET_GLULX;
Verb meta 'audio' 'music' 'musica' 'sonido' 'sonidos'
	*								-> Audio
	* 'on' / 'si'					-> AudioOn
	* 'encendido' / 'activado'		-> AudioOn
	* 'off' / 'no'					-> AudioOff
	* 'apagado' / 'desactivado'		-> AudioOff
;
VerboIrregular "establecer la reproducción de audio"
	with imperativo 'audio';
#Endif; ! TARGET_GLULX;

Extend	'corre' replace
	* noun							-> CloseX
;

Verb meta 'ayuda' 'pista' 'pistas' 'sos'
	*								-> Help
;
VerboIrregular "mostrar ayuda" with imperativo 'ayuda';

Extend only 'normal' replace
    *								-> LMode2
;

Verb	'descorre'
	* noun							-> OpenX
;

Extend	'habla' replace
	* noun							-> TalkTo
	* 'a'/'con' noun				-> TalkTo
	* creature						-> TalkTo
	* 'a'/'con' creature			-> TalkTo
	* 'por' noun					-> TalkOn
	* 'por' creature				-> TalkOn
;

Verb	'conversa' 'platica'
	* noun							-> TalkTo
	* 'a'/'con' noun				-> TalkTo
	* creature						-> TalkTo
	* 'a'/'con' creature			-> TalkTo
	* 'por' noun					-> TalkOn
	* 'por' creature				-> TalkOn
;

Verb	meta 'temas' 't//'
	*								-> TopicInventory
;
VerboIrregular "mostrar inventario de temas" with imperativo 'temas' 't//';

!!------------------------------------------------------------------------------

#Ifdef TARGET_GLULX;
[ AudioSub;
	if (Damusix.HayAudio()) <<AudioOff>>;
	else <<AudioOn>>;
];

[ AudioOnSub;
	if (Damusix.HayAudio())
		print_ret (parser) "La reproducción de audio ya estaba activada.";
	Damusix.ActivarAudio();
	print_ret (parser) "Reproducción de audio activada.";
];

[ AudioOffSub;
	if (~~Damusix.HayAudio())
		print_ret (parser) "La reproducción de audio ya estaba desactivada.";
	Damusix.DesactivarAudio();
	print_ret (parser) "Reproducción de audio desactivada.";
];
#Endif; ! TARGET_GLULX;

[ CloseXSub;
	print (parser) "En lugar de ~correr~ el objeto, se intenta utilizar 
	la acción ~cerrar~, que en este contexto es sinónima, y es más general. 
	(Apenas hay objetos corredizos en el mundo del relato, pero muchos se 
	pueden abrir y cerrar.)";
	new_line; new_line;
	<<Close noun second>>;
];

[ HelpSub;
	return HelpSystem.new_clue();
];

[ OpenXSub;
	print (parser) "En lugar de ~descorrer~ el objeto, se intenta utilizar 
	la acción ~abrir~, que en este contexto es sinónima, y es más general. 
	(Apenas hay objetos corredizos en el mundo del relato, pero muchos se 
	pueden abrir y cerrar.)";
	new_line; new_line;
	<<Open noun second>>;
];

[ TalkOnSub;
	start_parser_style();
	print "Habla con ", (name) noun;
	end_parser_style();
	new_line;
	<<TalkTo noun second>>;
];

[ TalkToSub;
	if ( noun == player ) {
		switch (GRAMMATICAL_INFLECTION) {
		1,2,3:	"Hablar con uno mismo no resulta especialmente divertido.";
		4,5,6:	"Hablar con uno mismo no resultaba especialmente divertido.";
		}
	}
	if ( noun hasnt animate ) 
		switch (GRAMMATICAL_INFLECTION) {
		1,2,3:	"Mejor intentar hablar con cosas que puedan devolver 
				una respuesta.";
		4,5,6:	"Mejor intentar hablar con cosas que pudiesen devolver 
				una respuesta.";
	}
	switch (GRAMMATICAL_INFLECTION) {
	1:	print_ret (The) noun, " no parece", (n) noun, " estar interesad", 
		(o) noun, " en hablar conmigo.";
	2:	print_ret (The) noun, " no parece", (n) noun, " estar interesad",
		(o) noun, " en hablar contigo.";
	3:	print (The) noun, " no parece", (n) noun, " estar interesad",
		(o) noun, " en hablar con ";
		if (player has female || 
			(player provides gender && player.gender == G_FEMENINO))
			print "ella";
		else
			print "él";
		".";
	4:	print_ret (The) noun, " no parecía", (n) noun, " estar interesad",
		(o) noun, " en hablar conmigo.";
	5:	print_ret (The) noun, " no parecía", (n) noun, " estar interesad",
		(o) noun, " en hablar contigo.";
	6:	print (The) noun, " no parecía", (n) noun, " estar interesad",
		(o) noun, " en hablar con ";
		if (player has female || 
			(player provides gender && player.gender == G_FEMENINO))
			print "ella";
		else
			print "él";
		".";
	}
];

[ TopicInventorySub;
	if (ConversationManager.is_running()) {
		if (ConversationManager.topic_inventory_size() > 0) {
			ConversationManager.show_topic_inventory();
		} else {
			print_ret (parser) "No hay temas disponibles en este momento.";
		}
	} else {
		print_ret (parser) "No hay conversaciones activas en este momento.";
	}
];

!!------------------------------------------------------------------------------

#Ifdef	DEBUG;
Verb meta 'gna'
	* multi							-> GNA
;

[ GNA g;
	g = GetGNAOfObject(noun);
	print g, ": ";
	switch (g) {
		0,1,2,3,4,5: print "animado ";
		default:	 print "inanimado ";
	}
	switch (g) {
		0,1,2,6,7,8: print "singular ";
		default:	 print "plural ";
	}
	switch (g) {
		0,3,6,9:	 print "masculino";
		1,4,7,10:	 print "femenino";
		default:	 print "neutro";
	}
];

[ GNASub;
	start_parser_style();
	print "Objeto: ";
	roman_style();
	print (name) noun; 
	parser_style();
	print ". (", (The) noun," / ", (the) noun," / ", (a) noun, 
	" / -", (o) noun, ")^GNA ", (GNA) noun;
	end_parser_style();
	new_line;
];
#Endif; ! DEBUG;


!!==============================================================================
!!	Definición de atributos, clases y objetos
!!------------------------------------------------------------------------------

Include ">1973_escena0.inf";	! Prólogo: Clases y objetos especiales
Include ">1973_escena1.inf";	! Escena 1: Habitación de Gabriel
Include ">1973_escena2.inf";	! Escena 2: Café Blanca Florida
Include ">1973_escena3.inf";	! Escena 3: Calles de Santiago
Include ">1973_escena4.inf";	! Escena 4: Flores para un joven difunto


