

!!==============================================================================
!!
!!	PROYECTO 1973
!!	Escena 1: Habitación de Gabriel
!!
!!==============================================================================
!!
!!	File:			1973_escena1.inf
!!	Author(s):		J. Francisco Martín (jfm.lisaso@gmail.com)
!!	Languague:		ES (Castellano)
!!	System:			Inform, INFSP 6
!!	Platform:		Z-Machine / GLULX
!!	Version:		0.0
!!	Released:		0000/00/00
!!
!!------------------------------------------------------------------------------
!!
!!	Copyright (c) 2013, J. Francisco Martín
!!
!!	This file is part of PROYECTO 1973.
!!
!!	PROYECTO 1973 is free software: you can redistribute it and/or modify 
!!	it under the terms of the GNU General Public License as published by 
!!	the Free Software Foundation, either version 3 of the License, or 
!!	(at your option) any later version.
!!
!!	PROYECTO 1973 is distributed in the hope that it will be useful, 
!!	but WITHOUT ANY WARRANTY; without even the implied warranty of 
!!	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
!!	GNU General Public License for more details.
!!
!!	You should have received a copy of the GNU General Public License 
!!	along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
!!
!!------------------------------------------------------------------------------


!!==============================================================================
!!	HABITACION: En la habitación
!!------------------------------------------------------------------------------
!!	1. Tocar TRACK_1_EXPOSITION, sin repeticiones, con FLAG_SOUND_NOTIFY:
!!		Damusix.AsignarCanal(TRACK_1_EXPOSITION, 0, -1, 1);
!!		Damusix.Tocar(TRACK_1_EXPOSITION, 1);
!!	2. Tocar TRACK_1_ACTION, con repeticiones:
!!		Damusix.AsignarCanal(TRACK_1_ACTION, 0, -1, -1);
!!		Damusix.Tocar(TRACK_1_ACTION, 1);
!!	3. Cambiar repeticiones de TRACK_1_ACTION):
!!		Damusix.Repeticion(TRACK_1_ACTION, 1);
!!	4. Tocar TRACK_1_DENOUEMENT, sin repeticiones, con FLAG_SOUND_NOTIFY:
!!		Damusix.AsignarCanal(TRACK_1_DENOUEMENT, 0, -1, 1);
!!		Damusix.Tocar(TRACK_1_DENOUEMENT, 1);

Room	HABITACION
 with	name	'alcoba' 'alojamiento' 'apartamento' 'aposento' 'casa' 'cuarto' 
				'dormitorio' 'estancia' 'habitacion' 'morada' 'vivienda', 
		short_name " ", 
		initial [; if (self hasnt visited) {
			!! Inicializaciones de la escena -----------------------------------
			SetGrammaticalInflection(THIRD_PERSON_PRESENT);
			if (flowers == nothing) flowers = GetFlowerType();
			!! Inicializaciones multimedia -------------------------------------
			#Ifdef TARGET_GLULX;
			Damusix.AsignarCanal(WOUNDED_A, 0, -1, 1);
			Damusix.AsignarCanal(WOUNDED_B, 1, -1, -1);
			Damusix.AsignarCanal(WOUNDED_C, 2, -1, 1);
!			Damusix.Tocar(WOUNDED_A, 1);
			next_track = WOUNDED_B;
			#Endif; ! TARGET_GLULX;
			!! Introducción ----------------------------------------------------
!			box	""
!				" Te ha dolido, ¿verdad?, dijo el chico.           "
!				" Si.                                              "
!				" ¿Eres muy valiente?                              "
!				" Regular.                                         "
!				" ¿Qué es lo más valiente que has hecho?           "
!				" Escupió en la carretera una flema sanguinolenta. "
!				" Levantarme esta mañana, dijo.                    "
!				""
!				"                                   CORMAC MCCARTY "
!				"                                   The Road, 2006 "
!				"";
!			PressAnyKey();
!			EraseWindow();
!			box	""
!				" Te ha dolido, ¿verdad?, dijo el chico.           "
!				" Si.                                              "
!				" ¿Eres muy valiente?                              "
!				" Regular.                                         "
!				" ¿Qué es lo más valiente que has hecho?           "
!				" Escupió en la carretera una flema sanguinolenta. "
!				" Levantarme esta mañana, dijo.                    "
!				""
!				"                                   CORMAC MCCARTY "
!				"                                   The Road, 2006 "
!				"";
!			print (parser) "Pulsa una tecla para empezar";
!			PressAnyKey();
!			EraseWindow();
!! TODO - modificar texto
			print "No debió ser así. Eso es lo primero que el joven Gabriel 
			Mistral piensa al abrir los ojos y despertar en la sofocante 
			oscuridad de la habitación. Aún permanece unos minutos en la cama, 
			tumbado con la mirada perdida entre las sombras del techo mientras 
			las imágenes se agolpan en su cabeza. Una y otra vez ha repasado 
			esas imágenes últimamente, convencido de que hay algo oculto en 
			ellas que no puedo ver. Una clave secreta de la que tal vez pudiese 
			ayudarse para comprender lo ocurrido pero que por más que se 
			esfuerza se ve incapaz de desentrañar. ¿Cómo se podía haber torcido 
			todo de esa manera? ¿Dónde se habían equivocado?^";
			new_line;
!! TODO - modificar texto
			print "Vuelve a cerrar los ojos un momento y entonces el perfume 
			de ", (the) flowers, " lo ocupa todo. Ella. Automáticamente tiende 
			la mano a un lado, buscando a ciegas el tacto de su cuerpo, pero no 
			está. Lo único que encuentra son las sábanas, húmedas y pegajosas. 
			No, claro que no está, recuerda. No aquí. La dejó durmiendo en el 
			hotel antes de volverse a casa en mitad de la noche, solo de 
			nuevo... Seguramente sea mejor así, al fin y al cabo ahora tiene 
			cosas más importantes de las que preocuparse. Deja escapar un largo 
			suspiro de resignación y se obliga a incorporarse finalmente en el 
			colchón.^";
			PressAnyKey();
			new_line;
			self.short_name = "En la habitación";
			DrawStatusLine();
			return true;
		}], 
		description [;
			if (self.light_flag)
!! TODO - modificar texto
				"La intensa claridad del amanecer se cuela ahora por la ventana 
				abierta, iluminando un caos de ropa, libros, papeles y otros 
				trastos esparcidos por todo el dormitorio. Sólo su cama y el 
				escritorio siguen aún en pie entre el tumulto.";
			else if (self.description_flag)
!! TODO - modificar texto
				"Las cortinas cerradas no dejan pasar más que una fina franja 
				de luz. Insuficiente todavía como para alejar las sombras que 
				envuelven la habitación.";
			else {
				self.description_flag = true;
!! TODO - modificar texto
				"A su alrededor todo son penumbras. La escasa luz capaz de 
				filtrarse a través de las cortinas cerradas sirve tan sólo para 
				dibujar una estrecha franja blanca y zigzagueante sobre el 
				suelo de la habitación.";
			}
		], 
		before [;
			Listen:
				print "Desde el exterior llega el eco";
				if (~~self.light_flag)
					print " distante y apagado";
				" de motores.";
			Smell:
				if (self.light_flag)
					"El aire que se cuela por la ventana es fresco y fragante.";
				else if (self.smell_flag)
					"Huele al sudor empapado entre las sábanas.";
				else {
					self.smell_flag = true;
!! TODO - modificar texto
					"Durante unos instantes permanece suspendido entre las 
					tinieblas el perfume de ", (the) flowers, ". Sin embargo, 
					está sólo en su memoria y se desvanece enseguida. Aquí y 
					ahora el único aroma que hay es el acre del sudor que 
					empapa las sábanas.";
				}
		], 
		e_to [;
			!! XXX - Se podrían llevar las siguientes comprobaciones, o parte 
			!! de ellas, al código de los objetos involucrados (haciendo uso de 
			!! sus rutinas react_before). Sin embargo, parece buena idea 
			!! mantener juntas en el código restricciones similares, y además 
			!! así se consigue más control sobre el orden en que se verifican.
			if (~~self.light_flag)
				"Con la habitación a oscuras no acierta a alcanzar ", 
				(the) puerta_habitacion, ".";
			if (ropa notin player || ropa hasnt worn)
				"Será mejor que se vista antes. No tiene ninguna intención de 
				pasearse por ahí desnudo.";
			if (~~IndirectlyContains(player, maleta)) {
				PronounNotice(maleta);
				"No puede dejarse la maleta aquí.";
			}
			if (puerta_habitacion hasnt open) {
				<Open puerta_habitacion>;
				new_line;
			}
!! TODO - modificar texto
			if (~~IndirectlyContains(player, billete))
				"Antes tiene que encontrar el billete. Lo necesita. No podrá 
				llegar muy lejos sin él.";
			!! Todas las restricciones han sido satisfechas:
			return puerta_habitacion;
		], 
		out_to [;
			return self.e_to();
		],
		cant_go
			"No puede ir por ahí. La puerta es la única salida de la 
			habitación.", 
		inhibit_object_list true, 
		!!----------------------------------------------------------------------
		!! Establece si la habitación está o no iluminada, de forma que si no 
		!! hay luz se restringe la libertad de acción del personaje jugador.
		!! @param status (booleano)
		!!		true para establecer la habitación como iluminada, false para 
		!!		establecer lo contrario
		set_light_flag [ status;
			if (status == true) {
				give oscuridad general;
				move oscuridad to LIMBO;
				give cama ~concealed;
				self.light_flag = true;
				self.inhibit_object_list = false;
			}
			if (status == false) {
				give cama concealed;
				move oscuridad to HABITACION;
				give oscuridad ~general;
				self.light_flag = false;
				self.inhibit_object_list = true;
			}
		], 
 private
		description_flag false,	! indica si el objeto ha sido descrito
		light_flag false, 		! indica si está iluminado
		smell_flag false, 		! indica si ha sido olido
;

!!------------------------------------------------------------------------------
!! Objetos con rutinas react_before:

Furniture	cama "cama" HABITACION
 with	name_m	'camastro' 'catre' 'colchon' 'jergon' 'lecho' 'mobiliario' 
				'moblaje' 'mueble' 'somier', 
		name_f	'cama' 'piltra',
		name_mp	'muebles',
		gender	G_FEMENINO,
		adjectives 'desecho' 'desecha' 'sin' 'hacer',
		!! La propiedad *clarification* se encarga de imprimir un mensaje 
		!! personalizado junto al título de la localidad cuando el jugador se 
		!! encuentra en un objeto
		clarification "sentado en la cama", 
		describe [ obj i;
			if (child(self) == nothing)
				return true;
			!! Listado de objetos que hay sobre la cama
			objectloop(obj in self)
				if (obj ~= player && obj hasnt scenery or concealed)
					i++;
			if (i == 0)
				return true;
			if (i == 1 && ropa in self)
				"^Tiene la ropa hecha un rebujo sobre la cama.";
			print "^Sobre la cama puede ver ";
			WriteListFrom(child(self), CONCEAL_BIT + ENGLISH_BIT + PARTINV_BIT);
			".";
		], 
		description [ obj i;
			print "Tiene las sábanas arrugadas y empapadas en sudor.";
			if (~~self.description_flag) {
				self.description_flag = true;
				print (emph) " Supongo que hoy no habrá ningún problema 
				por que la deje sin hacer, ¿eh?";
			}
			!! Listado de objetos que hay sobre la cama
			objectloop(obj in self)
				if (obj ~= player && obj hasnt scenery or concealed)
					i++;
			if (i > 0) {
				print " Sobre ella puede ver también ";
				WriteListFrom(child(self), CONCEAL_BIT + ENGLISH_BIT);
				print ".";
			}
			new_line;
			return true;
		], 
!! TODO - comportamiento de react_before
!! TODO - comportamiento de before
!! TODO - comportamiento de after
 private
		description_flag false,	! indica si el objeto ha sido descrito
 has	concealed enterable female supporter;

!!	-	*oscuridad.general* se activa para evitar las comprobaciones 
!!		contempladas en la rutina react_before del objeto
Atrezzo	oscuridad "oscuridad" HABITACION
with	name_f	'lobreguez' 'negrura' 'oscuridad' 'penumbra' 'tenebrosisdad', 
		name_fp	'penumbra' 'sombras' 'tinieblas', 
		gender	G_FEMENINO, 
		article	"la", 
!! TODO - adjetivos
		description
!! TODO - modificar texto
			"La oscuridad es prácticamente impenetrable, rota tan solo por las 
			estrechas franjas de luz que logran atravesar las cortinas 
			cerradas.",
		react_before [;
			if (self has general)
				return false;
			Blow, Listen, Rub, SetTo, Smell, Taste, Touch:
				if (noun == nothing or player or self)
					return false;
				if (IndirectlyContains(player, noun))
					return false;
				if (noun == cama)
					return false;
				if (noun == cortinas)
					return false;
				"No acierta a dar con ", (the) noun, " en la oscuridad.";
			Close:
				if (noun hasnt openable)
					return false;
				if (noun == cortinas)
					return false;
				if (noun hasnt open)
					"En la oscuridad de la habitación no es capaz de dar con ", 
					(the) noun, ".";
				"Está todo tan oscuro que no es capaz de acertar a cerrar ", 
				(the) noun, ".";
			Consult, Examine, Look, LookUnder, Read, Search:
				if (noun == nothing or player or self)
					return false;
				if (noun == HABITACION)
					return false;
				if (noun == cortinas)
					return false;
				print (string) random(
					"Con la habitación a oscuras apenas se puede distinguir más 
					que algunos bultos y siluetas. Necesita más luz para poder 
					ver algo.", 
					"No es capaz de ver nada en la oscuridad.", 
					"La luz que se cuela por entre las cortinas cerradas no es 
					suficiente para iluminar el cuarto. En esta oscuridad no 
					se puede ver nada.", 
					"Está todo demasiado oscuro como para poder ver algo más 
					que formas vagas y la silueta de algún mueble.", 
					"Todo cuanto puede distinguirse en la oscuridad son algunas 
					formas y siluetas. Necesita luz para poder ver algo más.", 
				);
				new_line;
				return true;
			Dance:
				"Decide que no es buena idea ponerse a bailar por la habitación 
				a oscuras.";
			Empty, EmptyT, Insert, PutOn, Remove, Transfer:
				if (noun hasnt supporter or container)
					return false;
				if (IndirectlyContains(player, noun))
					return false;
				if (second ~= nothing && IndirectlyContains(player, second))
					return false;
				"Con la habitación a oscuras no acierta a dar con ", 
				(the) noun, ".";
			Jump, JumpOver:
				"Decide que no es buena idea ponerse a saltar a oscuras.";
			Lock, Unlock:
				if (noun hasnt lockable)
					return false;
				if (IndirectlyContains(player, noun))
					return false;
				"A oscuras no es capaz de dar con ", (the) noun, ".";
			Open:
				if (noun hasnt openable)
					return false;
				if (noun == cortinas)
					return false;
				if (noun has open)
					"En la oscuridad de la habitación no es capaz de dar con ", 
					(the) noun, ".";
				"Está todo tan oscuro que no es capaz de acertar a abrir ", 
				(the) noun, ".";
			Pull, Push, PushDir, Take:
				if (noun has scenery or static)
					return false;
				if (noun == nothing or player)
					return false;
				if (IndirectlyContains(player, noun))
					return false;
				"No acierta a dar con ", (the) noun, " en la oscuridad.";
!! TODO - modificar texto
			Swing:
				"Decide que no es buena idea andar columpiándose por ningún 
				lado con la habitación a oscuras.";
		], 
		before [;
			Consult, Examine, Look:	return self.description();
			!! No es necesario referirse a eso para terminar la historia
			default: L__M(##Miscellany, 39); return true;
		],
 has	female;


!!------------------------------------------------------------------------------
!! Atrezzo:

!!	-	*cortinas.general* se activa al abrir el objeto por primera vez
Atrezzo	cortinas "cortinas" HABITACION
 with	name_m	'cortinaje' 'ventanal' 'visillo',
		name_mp	'cortinajes' 'visillos', 
		name_f	'colgadura' 'cortina' 'persiana' 'ventana', 
		name_fp	'colgaduras' 'cortinas' 'persianas', 
		gender	G_FEMENINO + G_PLURAL,
		adjectives 'abierto' 'abiertos' 'abierta' 'abiertas' 'cerrado' 
			'cerrados' 'cerrada' 'cerradas' 'tela',
		description [;
			if (self has open)
!! TODO - modificar texto
				"La luz del sol entra a raudales en la habitación ahora que 
				las cortinas están descorridas.";
			else {
!! TODO - modificar texto
				print (string) random(
				"Cerradas, apenas dejan pasar la luz del amanecer al interior, 
				con lo que el cuarto permanece en penumbras.", 
				"Algunos finos haces de luz se cuelan por entre las rendijas 
				que dejan las cortinas cerradas.", 
				);
				new_line;
				return true;
			}
		], 
		react_before [; 
			Yes:
				if (self has on)
					<<Close self>>;
		],
		before [;
			Close:
				if (self hasnt open)
					return false;
				if (self hasnt on) {
					StartTimer(self, 1);
					give self on;
					"¿Y dejar la habitación de nuevo a oscuras?";
				}
				return false;
		], 
		after [;
			Close:
				HABITACION.set_light_flag(false);
				print (string) random(
					"Corre las cortinas de nuevo.^", 
					"Cierra las cortinas.^", 
					"Cierra las cortinas otra vez.^", 
				);
				new_line;
				<<Look>>;
			Open:
				HABITACION.set_light_flag(true);
				if (self has general) {
					print (string) random(
						"Descorre las cortinas de nuevo.^", 
						"Abre las cortinas.^", 
						"Abre las cortinas otra vez.^", 
					);
					new_line;
					<<Look>>;
				}
				else {
					give self general;
!! XXX - modificar texto
					print "El entarimado está caliente y cruje bajo sus pies 
					descalzos. Dando tumbos a través de la oscuridad, cruza el 
					cuarto para descorrer las cortinas y abrir la ventana, 
					dejando que los tibios y reconfortantes rayos del sol 
					inunden la estancia. El olor es inconfundible; a mar y a 
					montaña, a clavelinas y a malvas. Los perfumes de su hogar. 
					Pero enseguida comprende que hay algo más. Una... una 
					impresión desagradable acompañando a la caricia del sol. Un 
					temblor imperceptible que recorre en secreto desde las 
					tablas del suelo hasta las manos y los ojos infinitos de 
					Gabriel. Y al girarse lo ve: todo el dormitorio está patas 
					arriba, tal y como lo encontró al llegar a casa de 
					madrugada. No había sido sólo un sueño. Era verdad. Al 
					final le han encontrado.^";
					PressAnyKey();
					new_line;
					<<Look>>;
				}
		],
		time_left 1, 
		time_out [; give self ~on; ], 
 has	female openable pluralname;

Atrezzo	puerta_habitacion "puerta" HABITACION
!! TODO - nombres y adjetivos
 with	name_f	'entrada' 'puerta' 'salida', 
		gender	G_FEMENINO, 
		adjectives 'madera' 'pintada' 'blanco' 'blanca' 'sencilla' 'cerrada' 
			'abierta', 
		description [;
			if (self has open) "Está abierta de par en par.";
			"De madera pintada en blanco. Tiene colgado un colorido calendario 
			de pared por detrás.";
		], 
		after [;
			Close:
				"Al cerrarla deja al descubierto un calendario que tiene 
				colgado detrás.";
			Open:
				"La puerta se abre con un ligero crujir de goznes.";
		],
		door_dir out_to, 
		door_to [;
!! TODO - hacer que Gabriel dude antes de salir de la habitación
			print "Gabriel se detiene a echar un último vistazo a la habitación 
			y tuerce la boca en una media sonrisa al pensar en lo mucho que se 
			parece a su propia vida; puesta toda patas arriba, llena de sueños 
			rotos, pisoteados y tirados por el suelo. Pero ya no hay tiempo 
			para pensar en ello. Así que al cabo de un momento, sin más, le da 
			la espalda al pasado y sale con paso decidido por la puerta 
			abierta.^";
			PressAnyKey();

			#Ifdef TEST_SCENE1;
			new_line;
			print (parser) "Fin de la escena 1.";
			PressAnyKey();
			@restart; L__M(##Restart, 2);
			#Endif; ! TEST_SCENE1;

			new_line;
			return CAFE;
		], 
 has	door female ~open openable transparent;

Atrezzo	"calendario de pared" puerta_habitacion
!! TODO - nombres y adjectivos
 with	name_m	'calendario' 'anuario', 
		gender	G_MASCULINO, 
		adjectives 'pared' 'colorido', 
		description [;
			"En su mitad superior hay una copia a color de una pintura de Van 
			Gogh: un bodegón floral de tonos cálidos en el que varios claveles 
			anaranjados comparten jarra con otros blanquecinos de tallo más 
			largo. La mitad inferior del calendario está ocupada por la 
			cuadrícula ordenada de los días de septiembre y al final, en 
			grandes números: ", (emph) "1973", ".";
		], 
		before [;
			Examine:
				if (parent(self) has open) {
					give parent(self) ~open;
					print "Cierra la puerta para ver mejor el calendario que 
					tiene colgado detrás.^";
					new_line;
					return false;
				}
			Close, Open:
				"Ya está bien como está.";
			Pull, Push, PushDir, Take:
				"Está enganchado a la puerta.";
		], 
 has	male;

!!------------------------------------------------------------------------------
!! Furniture:

Furniture	escritorio "escritorio" HABITACION
 with	name_m	'escritorio' 'mobiliario' 'moblaje' 'mueble' 'pupitre', 
		name_mp	'muebles', 
		name_f	'mesa', 
		gender	G_MASCULINO,
		adjectives 'madera' 'pequeno' 'pequena' 'oscuro' 'oscura',
		description [;
			print "Se trata de un funcional escritorio de madera oscura";
			if (child(self)) {
				print " sobre el que hay ";
				WriteListFrom(child(self), CONCEAL_BIT + ENGLISH_BIT);
			}
			print ". Tiene un único cajón, que en estos momentos está";
			if (cajon hasnt open) " cerrado.";
			print " abierto.";
			if (~~child(cajon)) " Dentro no hay nada.";
			print " Dentro alcanza a ver ";
			WriteListFrom(child(cajon), CONCEAL_BIT + ENGLISH_BIT);
			".";
		], 
		before [;
			Climb, Enter, Sit:
				"En realidad no tiene motivos para subirse ahí.";
			Close:
				<<Close cajon>>;
			Open:
				<<Open cajon>>;
			Pull, Push, PushDir, Take, Turn:
				print_ret (The) self, " pesa", (n) self, " demasiado para andar 
				moviéndol", (o) self, ".";
		], 
 has	male concealed supporter transparent;

Furniture	cajon "cajón" HABITACION
 class	Receptacle, 
 with	name_m	'cajon' 'cajoncillo' 'compartimento', 
		name_f	'gaveta',
		gender	G_MASCULINO, 
		adjectives 'escritorio', 
		description [; <<Search self>>; ], 
		before [;
			Pull: 
				<<Open self>>;
			Push:
				<<Close self>>;
			PushDir, Take, Turn:
				"Forma parte del escritorio.";
		],
		capacity_size 3,
 has	male concealed container openable ~open;

!!------------------------------------------------------------------------------
!! Items:

!!	-	*ropa.general* se activa al vestir el objeto por primera vez
Item	ropa "ropa" cama
 class	Receptacle
 with	name_m	'atuendo' 'vestuario' 'pantalon' 'tejano' 'vaquero' 'abrigo'
				'gaban' 'sobretodo' 'chaqueton' 'bolsillo',
		name_f	'ropa' 'indumentaria' 'prenda' 'vestimenta' 'pelliza' 
				'chaqueta' 'faltriquera' 'camisa' 'camisola' 'camiseta',
		name_mp	'atuendos' 'pantalones' 'tejanos' 'vaqueros' 'bolsillos',
		name_fp	'prendas' 'vestimentas' 'faltriqueras',
		gender	G_FEMENINO,
		article	"su", 
!! TODO - adjetivos
		parse_name [ word;
			word = NextWord();
			if (word == 'abrigo' or 'bolsillo' or 'bolsillos' or 'chaqueta' or 
				'chaqueton' or 'faltriquera' or 'faltriqueras' or 'gaban' or 
				'pelliza' or 'sobretodo')
				self.coat_flag = true;
			if (word == 'camisa' or 'camiseta' or 'camisola')
				self.shirt_flag = true;
			if (word == 'pantalon' or 'pantalones' or 'tejano' or 'tejanos' or 
				'vaquero' or 'vaqueros')
				self.trousers_flag = true;
			wn--;
			return -1;
		], 
		description [;
			if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT) {
				if (self.coat_flag) {
!! TODO - modificar texto
					print "Se trata de un gran abrigo oscuro de tela basta, 
					largo hasta las rodillas y con dos profundos bolsillos a 
					los lados.";
					if (self in player && self has worn && child(self)) {
						print "^^En los bolsillos hay ";
						WriteListFrom(child(self), 
							ENGLISH_BIT + RECURSE_BIT + FULLINV_BIT);
						".";
					}
					new_line;
					return true;
				} 
				if (self.shirt_flag)
!! TODO - modificar texto
					"Una sencilla camisa de algodón blanca.";
				if (self.trousers_flag)
!! TODO - modificar texto
					"Son unos pantalones negros, algo desgastados ya por el 
					uso.";
!! TODO - modificar texto
				print "Siempre ha vestido ropa barata y discreta. Estos son 
				unos pantalones negros, camisa blanca de algodón, y un gran 
				abrigo gris de tela basta, largo hasta las rodillas y de 
				profundos bolsillos.";
				if (self in cama) " Está hecha un rebujo sobre la cama.";
				if (self in real_location) " Está hecha un rebujo en el suelo.";
				if (self in player && self has worn && child(self)) {
					print "^^En los bolsillos del abrigo hay ";
					WriteListFrom(child(self), 
						ENGLISH_BIT + RECURSE_BIT + FULLINV_BIT);
					".";
				}
				new_line;
				return true;
			}
			else {
				if (self.coat_flag) {
!! TODO - modificar texto
					print "Se trataba de un gran abrigo oscuro de tela basta, 
					largo hasta las rodillas y con dos profundos bolsillos a 
					los lados.";
					if (self in player && self has worn && child(self)) {
						print "^^En los bolsillos había ";
						WriteListFrom(child(self), 
							ENGLISH_BIT + RECURSE_BIT + FULLINV_BIT);
						".";
					}
					new_line;
					return true;
				} 
				if (self.shirt_flag)
!! TODO - modificar texto
					"Una camisa a cuadros verde y gris.";
				if (self.trousers_flag)
!! TODO - modificar texto
					"Eran una pantalones vaqueros azules.";
!! TODO - modificar texto
				print "Siempre ha vestido ropa barata y discreta. Ese día 
				llevaba unos vaqueros, camisa a cuadros de color verde y gris, 
				y su gran abrigo gris de tela basta.";
				if (self in player && self has worn && child(self)) {
					print "^^En los bolsillos del abrigo había ";
					WriteListFrom(child(self), 
						ENGLISH_BIT + RECURSE_BIT + FULLINV_BIT);
					".";
				}
				new_line;
				return true;
			}
		], 
		before [;
!! TODO - mensajes diferentes para diferentes prendas del objeto
			Disrobe:
				if (self hasnt worn)
					return false;
				if (real_location == HABITACION)
					return false;
				if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
					"No piensa pasearse por ahí desnud", (o) player, ".";
				else
					"No pensaba pasearse por ahí desnud", (o) player, ".";
			Search:
				if (self hasnt worn) {
!! XXX - modificar texto
					if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
						"No encuentra nada interesante entre la ropa.";
					else
						"No encontró nada interesante entre la ropa.";
				}
				print "En los bolsillos lleva ";
				WriteListFrom(child(self),
					ENGLISH_BIT + RECURSE_BIT + FULLINV_BIT); 
				".";
		], 
		after [;
			!! Se reestablecen las variables de objetivo de la descripción:
			self.coat_flag = false;
			self.shirt_flag = false;
			self.trousers_flag = false;
!! TODO - vaciar los bolsillos del abrigo al quitárselo
			Disrobe:
				give self ~open;
				give self ~container;
				if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
					"Se quita ", (the) self, ".";
				else
					"Se quitó ", (the) self, ".";
			LetGo:
				if (~~keep_silent) {
					if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
						"Saca ", (the) noun, " de dentro del bolsillo.";
					else
						"Sacó ", (the) noun, " de dentro del bolsillo.";
				}
			Receive:
				if (~~keep_silent) {
					if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
						"Mete ", (the) noun, " dentro de uno de los bolsillos 
						del abrigo.";
					else
						"Metió ", (the) noun, " dentro de uno de los bolsillos 
						del abrigo.";
				}
!! TODO - si se vacían los bolsillo al desvestir, volver a llenarlos 
			Wear:
				give self container;
				give self open;
				if (self hasnt general) {
					give self general;
					move revolver to self;
					"Comienza a vestirse lentamente, con las imágenes de la 
					noche anterior dando vueltas aún en su cabeza: la última y 
					solitaria cena en en restaurante cercano... el bar... ella 
					la desconocida que le observaba desde el otro extremo de la 
					barra... y las copas juntos... y vagos fragmentos de 
					conversación... y una barata habitación de hotel... y el 
					jarrón con ", (name) flowers, " en la mesilla de noche. 
					Recuerda el perfume de ", (the) flowers, ". Y recuerda 
					también el sentimiento de culpa por dejarla allí, una vez 
					se hubo dormido, para volverse a casa en mitad de la noche. 
					Solo de nuevo. Sin una última palabra de despedida.
					^^
					Termina de abrocharse los pantalones y se coloca el abrigo. 
					De inmediato nota el bulto en el bolsillo y, en un gesto 
					inconsciente, desliza la mano dentro y acaricia el cañón 
					del revólver. Un escalofrío le recorre la espalda; el arma 
					sigue ahí. Frío. Pesado. Aterradoramente real.";
				}
				return false;
		], 
		!! Mensajes de error. Se producen al intentar meter en el contenedor 
		!! un objeto que viola alguno de los límites de capacidad definidos
		error_messages [ id obj;
			switch(id) {
				1:	!! Se intenta meter en el bolsillo un objeto cuyo peso 
					!! supera el límite permitido:
					if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
						print_ret (The) obj, " ", (es) obj, " demasiado pesad", 
						(o) obj, " como para guardarlo", (o) obj, " en uno de 
						los bolsillos del abrigo.";
					else
						print_ret (The) obj, " era", (n) obj, " demasiado 
						pesad", (o) obj, " como para guardarl", (o) obj, " en 
						uno de los bolsillos del abrigo.";
				2:	!! Se intenta meter en el bolsillo un objeto cuyo peso,
					!! en conjunto con el del resto de objetos que hay ya en el 
					!! bolsillo, supera el límite permitido:
					if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
						"Los bolsillos del abrigo ya no soportan más peso.";
					else
						"Los bolsillos del abrigo ya no soportaban más peso.";
				3:	!! Se intenta meter en el bolsillo un objeto cuyo volumen 
					!! supera el límite permitido:
					if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
						print_ret (The) obj, " no cabe", (n) obj, " dentro del  
						bolsillo."; 
					else
						print_ret (the) obj, " no cabía", (n) obj, " dentro del 
						bolsillo.";
				4:	!! Se intenta meter en el bolsillo un objeto cuyo volumen, 
					!! en conjunto con el del resto de objetos que hay ya en el 
					!! bolsillo, supera el límite permitivo:
					if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
						"En los bolsillos ya no queda hueco suficiente como 
						para meter ", (the) obj, ".";
					else
						"En los bolsillos ya no quedaba hueco suficiente como 
						para meter ", (the) obj, ".";
				5:	!! Se intenta meter en el bolsillo un objeto cuto tamaño 
					!! supera el límite permitido:
					if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
						print_ret (The) obj, " ", (es) obj, " demasiado 
						grande", (s) obj, " como para guardarl", (o) obj, " en 
						uno de los bolsillos del abrigo.";
					else
						print_ret (The) obj, " era", (n) obj, " demasiado 
						grande", (s) obj, " como para guardarl", (o) obj, " en 
						uno de los bolsillos del abrigo.";
				6:	!! Se intenta meter en el bolsillo un objeto tras haber 
					!! alcanzado el límite de objetos permitido:
					if (GRAMMATICAL_INFLECTION == THIRD_PERSON_PRESENT)
						"En el bolsillo ya no entran más cosas.";
					else
						"En el bolsillo ya no entraban más cosas.";
			}
		], 
		capacity_size 3, 
		size 4, 
 private
		coat_flag false, 
		shirt_flag false, 
		trousers_flag false, 
 has	clothing container female open;

!! TODO - terminar implementación
Item	revolver "revólver" LIMBO
 with	name_m	'revolver' 'tambor' 'barrilete' 'canon', 
		name_f	'pistola' 'arma' 'cacha' 'culata', 
		name_fp	'cachas', 
		gender	G_MASCULINO, 
!! TODO - adjetivos
		adjectives 'frio' 'fria' 'pesado' 'pesada' 'metalico' 'metalica' 
			'metal' 'brillante' 'amenazador' 'amenazadora' 'horrible' 'fuego',
		description [;
			switch(self.ammo) {
				0: print "No le quedan balas";
				1: print "Le queda una sola bala";
				6: print "Tiene todas las balas ---las seis---";
				default: print "Le quedan ", (number) self.ammo, " balas";
			}
			" en el tambor.";
		], 
		ammo 6, 
		size 3, 
 has	male;

Item	maleta "maleta de viaje" HABITACION
 with	name_m	'equipaje' 'maleton', 
		name_f	'maleta',
		gender	G_FEMENINO, 
		adjectives 'viaje' 'cuero' 'gran' 'grande' 'desgastado' 'desgastada', 
		invent [;
			if (inventory_stage == 1 && self in HABITACION) {
				print "su maleta de viaje, ya preparada y apoyada junto a la 
				puerta";
				return true;
			}
		],
		describe [;
			if (self in TAXI)
				"^La maleta reposa sobre el asiento de al lado.";
		],
		description [;
			print "Es un maletón de viaje forrado en cuero desgastado. Dentro 
			lleva lo poco que guardará de la que ha sido su vida hasta ahora; 
			algo de ropa y un par de libros. Nada más.";
			if (~~self.description_flag) {
				self.description_flag = true;
				" Ningún recuerdo. Esos tendrá que dejárselos atrás.";
			}
			new_line;
			return true;
		],
		before [;
			Close:
				"Ya está cerrada.";
			Empty:
				"No va a deshacer la maleta ahora.";
			Open, Receive:
				if (location == HABITACION)
					"Ya tiene dentro todo cuanto puede llevar consigo.";
				else
					"Ahora no necesita nada de lo que lleva dentro de la 
					maleta.";
		],
		after [; 
			Take: 
				if (self hasnt moved) 
					"Recoge la maleta del suelo."; 
		],
		size 5, 
 private
		description_flag false,	! indica si el objeto ha sido descrito
 has	female openable ~open container;

Item	libro_bolsillo "librito de poemas" cajon
 with	name_m	'libro' 'librito' 'tomo' 'volumen' 'ejemplar',
		gender	G_MASCULINO,
		adjectives 'pequeno' 'encuadernado' 'negro' 'bolsillo' 'tapas',
		description
			"Es un pequeño tomo de tapas negras sin apenas adornos, solo el 
			título: ~POEMAS~, impreso en tinta dorada en la portada.",
		react_before [;
			if (noun == billete && second == self)
				"Ya no necesita tenerlo ahí escondido.";
			if (noun ~= billete && second == self)
				"No se puede esconder algo así entre las páginas de un libro.";
		], 
		before [;
			Close:
				"Ya estaba cerrad", (o) self, ".";
			Consult, Open, Read, Search:
				print "Pasa algunas hojas al azar, sin detenerse ante ninguno 
				de esos versos ya releídos que se deslizan antes sus ojos. 
				Ahora no es el mejor momento para detenerse a leer poesía.^";
				if (billete hasnt general) {
					give billete general;
					move billete to real_location;
					"^De pronto, un pequeño trozo de papel se escurre de entre 
					las páginas amarillentas y cae a los pies de Gabriel.";
				}
				return true;
		], 
		size 3, 
 has	female container;

!!	-	*billete.general* se activa al descubrir el billete escondido dentro 
!!		del libro
Item	billete LIMBO
 with	short_name [;
			if (self.description_flag) print "billete";
			else print "trozo de papel";
			return true;
		], 
		name_m	'billete' 'papel' 'pase', 
		gender	G_MASCULINO, 
		adjectives 'trozo' 'pedazo' 'barcaza' 'san' 'antonio',
		description [;
			if (~~self.description_flag) {
				self.description_flag = true;
				print "Si, es él. ";
			}
			print "Es el billete para una barcaza que sale del puerto de San 
			Antonio con fecha de hoy a las 16:30.";
			if (real_location == HABITACION)
				"Aún hay tiempo, pero no puede entretenerse. Tiene que salir 
				de aquí.";
		], 
		size 1, 
 private
		description_flag false,	! indica si el objeto ha sido descrito
 has	male;

!!------------------------------------------------------------------------------
!! NPCs:


